题目链接：codeforces.com/contest/1984/problem/C2
dp求解最大值，当前的数可以有上一次操作的那些操作产生，记录它们的和。
代码
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define all(x) x.begin(),x.end()
#define endl '\n'
const int maxn = 2e5+10;
const int mod = 998244353;
const int INF  =1e9+20;
ll n,m,k;
int a[maxn];
ll dp[maxn][2];
ll sum[maxn][2];

void solve()
{
    sum[0][1] = 1;
    cin >> n;
    int x;
    for (int i = 1; i <= n; i ++ ) {
        cin >> x;
        dp[i][0] = max(abs(dp[i - 1][0] + x), abs(dp[i - 1][1] + x));
        dp[i][1] = dp[i - 1][1] + x;
        sum[i][0] = sum[i][1] = 0;
        if(dp[i-1][0]+x==dp[i][1]) sum[i][1]=(sum[i-1][0]+sum[i][1])%mod;
        else if(dp[i-1][0]+x==dp[i][0]) sum[i][0]=(sum[i-1][0]+sum[i][0])%mod;
        if(dp[i-1][1]+x==dp[i][1]) sum[i][1]=(sum[i-1][1]+sum[i][1])%mod;
        else if(dp[i-1][1]+x==dp[i][0]) sum[i][0]=(sum[i-1][1]+sum[i][0])%mod;
        if(abs(dp[i-1][0]+x)==dp[i][1]) sum[i][1]=(sum[i-1][0]+sum[i][1])%mod;
        else if(abs(dp[i-1][0]+x)==dp[i][0]) sum[i][0]=(sum[i-1][0]+sum[i][0])%mod;
        if(abs(dp[i-1][1]+x)==dp[i][1]) sum[i][1]=(sum[i-1][1]+sum[i][1])%mod;
        else if(abs(dp[i-1][1]+x)==dp[i][0]) sum[i][0]=(sum[i-1][1]+sum[i][0])%mod;
    }
    ll ans = 0;
    if(dp[n][0]>dp[n][1]) {
        ans = sum[n][0];
    }
    else ans = sum[n][1];
    cout<<ans<<endl;
}
int main() {
    int t  =1;
    cin>>t;
    while(t--) {
        solve();
    }
}
